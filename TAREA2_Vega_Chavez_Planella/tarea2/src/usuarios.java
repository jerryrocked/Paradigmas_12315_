/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.mysql.jdbc.ResultSet;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author benja
 */
public class usuarios extends javax.swing.JFrame {

    /**
     * Creates new form usuarios
     */
    Connection con = null;
    Statement stmt = null;
    String var,var2;
    
    public usuarios() {
        initComponents();
        this.setTitle("Registro Ventas");
        this.setLocation(500,300);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombre = new javax.swing.JLabel();
        txt_nomb = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_fort = new javax.swing.JTextField();
        txt_mine = new javax.swing.JTextField();
        txt_cod = new javax.swing.JTextField();
        img_cod = new javax.swing.JLabel();
        img_mine = new javax.swing.JLabel();
        img_fort = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_terminar = new javax.swing.JButton();
        btn_edt = new javax.swing.JButton();
        btn_env = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nombre.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        nombre.setText("Nombre Vendedor:");

        txt_nomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombActionPerformed(evt);
            }
        });
        txt_nomb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Cantidad Vendida:");

        txt_fort.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_fort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fortActionPerformed(evt);
            }
        });
        txt_fort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_fortKeyTyped(evt);
            }
        });

        txt_mine.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_mine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mineActionPerformed(evt);
            }
        });
        txt_mine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mineKeyTyped(evt);
            }
        });

        txt_cod.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codActionPerformed(evt);
            }
        });
        txt_cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codKeyTyped(evt);
            }
        });

        img_cod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cod.png"))); // NOI18N
        img_cod.setAutoscrolls(true);

        img_mine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mine.png"))); // NOI18N

        img_fort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fortnite.jpg"))); // NOI18N

        btn_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_save.setText("Guardar Venta");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_terminar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_terminar.setText("Consultar");
        btn_terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_terminarActionPerformed(evt);
            }
        });

        btn_edt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_edt.setText("Buscar");
        btn_edt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_edtActionPerformed(evt);
            }
        });

        btn_env.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_env.setText("Actualizar");
        btn_env.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_envActionPerformed(evt);
            }
        });

        txt_id.setEditable(false);
        txt_id.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_id.setEnabled(false);
        txt_id.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("ID:");
        jLabel2.setFocusable(false);
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_terminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txt_mine, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(img_cod)
                            .addGap(55, 55, 55)
                            .addComponent(img_mine)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nomb, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_env, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_fort)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addComponent(img_fort)
                            .addComponent(btn_edt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(1, 1, 1))
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_nomb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(img_cod)
                    .addComponent(img_mine)
                    .addComponent(img_fort))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_mine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_fort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_edt)
                    .addComponent(btn_save))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_env)
                    .addComponent(btn_terminar))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void actualizar() {
        
String cadena2,cadena3,cadena4,cadena5;
        
        float p_cod, p_mine, p_fort, c_cod, c_mine, c_fort;
        float cod, mine, fort, tot_vent, com_cod, com_mine, com_fort, com_tot;
        p_cod = 34500;
        p_mine = 8800;
        p_fort = 58200;
        c_cod = (float) 0.06;
        c_mine = (float) 0.04;
        c_fort = (float) 0.09;
        
        
        String cadena1 = txt_id.getText();
        cadena2 = txt_nomb.getText();
        cadena3 = txt_cod.getText();
        cadena4 = txt_mine.getText();
        cadena5 = txt_fort.getText();
        
        cod = Float.valueOf(cadena3);
        mine = Float.valueOf(cadena4);
        fort = Float.valueOf(cadena5);
        tot_vent = (cod * p_cod) + (mine * p_mine) + (fort * p_fort);
        com_cod = ((cod * p_cod) * c_cod);
        com_mine = ((mine * p_mine) * c_mine);
        com_fort = ((fort * p_fort) * c_fort);
        com_tot = (com_cod + com_mine + com_fort);
     
    
     if (txt_nomb.getText().equals("")) {
         javax.swing.JOptionPane.showMessageDialog(this,"1-. Consulte el nombre del cliente\n 2-. Actualice el dato deseado en el campo correspondiente","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
     }
     else {
     try { 
                  String url = "jdbc:mysql://localhost:3306/tarea2?characterEncoding=utf8"; 
                  String usuario = "root"; 
                  String contraseña = "admin"; 
                  
                  Class.forName("com.mysql.jdbc.Driver").newInstance(); 
                  con = DriverManager.getConnection(url,usuario,contraseña); 
                  if ( con != null ) 
                    System.out.println("Se ha establecido una conexión a la base de datos " +  
                                       "\n " + url ); 
  
                  stmt = con.createStatement(); 
                  stmt.executeUpdate("update ignore usuarios set id= '"+cadena1+"' , nombre = '"+cadena2+"', cod = '"+cod+"' , mine = '"+mine+"' , fort = '"+fort+"' , tot_vent = '"+tot_vent+"' , com_cod = '"+com_cod+"' , com_mine = '"+com_mine+"' , com_fort = '"+com_fort+"' , com_tot = '"+com_tot+"' where id = '"+txt_id.getText()+"' || nombre = '"+txt_nomb.getText()+"' || cod = '"+txt_cod.getText()+"' || mine = '"+txt_mine.getText()+"' || fort = '"+txt_fort.getText()+"'"); 

                  System.out.println("Los valores han sido Actualizados"); 
                  } 
                  catch( SQLException e ) { 
                      e.printStackTrace(); 
                  } catch (ClassNotFoundException ex) { 
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
  
              finally { 
                  if ( con != null ) { 
                      try    { 
                          con.close(); 
                          stmt.close(); 
                      } catch( Exception e ) { 
                          System.out.println( e.getMessage()); 
                      } 
                  } 
     }
     javax.swing.JOptionPane.showMessageDialog(this,"Actualizado correctamente!","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
     } 
        this.txt_id.setText("");
        this.txt_nomb.setText("");
        this.txt_cod.setText("");
        this.txt_mine.setText("");
        this.txt_fort.setText("");
    }

    
    public void consulta() {
        String cap="";
        ResultSet rs = null;
        var2 = var;
        String sql2="Select id, nombre, cod, mine, fort, tot_vent, com_cod, com_mine, com_fort, com_tot  FROM usuarios where nombre = '"+var2+"'";
            
   try { 
       
                  String url = "jdbc:mysql://localhost:3306/tarea2?characterEncoding=utf8"; 
                  String usuario = "root"; 
                  String contraseña = "admin";
                  
     Class.forName("com.mysql.jdbc.Driver").newInstance(); 
     
     
     con = DriverManager.getConnection(url,usuario,contraseña); 

     if ( con != null ) 
	   System.out.println("Se ha establecido una conexión a la base de datos " + 
	                                       "\n " + url ); 
	  
	stmt = con.createStatement(); 
	rs = (ResultSet) stmt.executeQuery(sql2); 
        
	int i=1; 
	   while ( rs.next() ) { 
               
	           String id = rs.getString("id"); 
	           String inom = rs.getString("nombre"); 
	           String icod = rs.getString("cod"); 
                   String imine = rs.getString("mine"); 
                   String ifort = rs.getString("fort"); 
                   String itot_vent = rs.getString("tot_vent");
                   String icom_cod = rs.getString("com_cod");
                   String icom_mine = rs.getString("com_mine");
                   String icom_fort = rs.getString("com_fort");
                   String icom_tot = rs.getString("com_tot");
	           System.out.println("Sitio Web "+ (i++) + ":\n" 
	                     
                           + id + "\n"
                           + inom + "\n" 
                           + icod + "\n" 
                           + imine + "\n"
	                   + ifort + "\n"
                           + itot_vent + "\n"
                           + icom_cod + "\n"
                           + icom_mine + "\n"
                           + icom_fort + "\n"
                           + icom_tot + "\n\n" ); 
                   txt_id.setText(id);
                   txt_nomb.setText(inom);
                   txt_cod.setText(icod);
                   txt_fort.setText(ifort);
                   txt_mine.setText(imine);
                  
	         } 
	        } 
                  catch( SQLException ex ) { 
                      ex.printStackTrace(); 
	                  } catch (InstantiationException ex) { 
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
	  
	              finally { 
	                  if ( rs != null ) { 
	                      try    { 
	                          rs.close(); 
	                      } catch( SQLException ex ) { 
	                          System.out.println( ex.getMessage()); 
	                          ex.printStackTrace(); 
	                      } 
	                  } 
	                  if ( stmt != null ) { 
	                      try    { 
	                          stmt.close(); 
	                      } catch( SQLException ex ) { 
	                          System.out.println( ex.getMessage()); 
	                          ex.printStackTrace(); 
	                      } 
	                  } 
	                  if ( con != null ) { 
	                      try    { 
	                          con.close(); 
	                      } catch( SQLException ex ) { 
	                          System.out.println( ex.getMessage()); 
	                          ex.printStackTrace(); 
         } 
       }
     }    
    }

    
    private void txt_nombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombActionPerformed

    private void txt_fortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fortActionPerformed

    private void txt_mineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mineActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        
        String cadena2,cadena3,cadena4,cadena5;
        
        float cod, mine, fort, tot_vent, com_cod, com_mine, com_fort, com_tot;
        float p_cod = 34500;
        float p_mine = 8800;
        float p_fort = 58200;
        float c_cod = (float) 0.06;
        float c_mine = (float) 0.04;
        float c_fort = (float) 0.09;
        
        cadena2 = txt_nomb.getText();
        cadena3 = txt_cod.getText();
        cadena4 = txt_mine.getText();
        cadena5 = txt_fort.getText();
        
        cod = Float.valueOf(cadena3);
        mine = Float.valueOf(cadena4);
        fort = Float.valueOf(cadena5);
        
        tot_vent = (cod * p_cod) + (mine * p_mine) + (fort * p_fort);
        com_cod = ((cod * p_cod) * c_cod);
        com_mine = ((mine * p_mine) * c_mine);
        com_fort = ((fort * p_fort) * c_fort);
        com_tot = (com_cod + com_mine + com_fort);
        
        
        
        if (txt_nomb.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Debe llenar todos los campos","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        else {
        try {
            String url = "jdbc:mysql://localhost:3306/tarea2?characterEncoding=utf8";
            String usuario = "root";
            String contraseña = "admin";
            
            Class.forName("com.mysql.jdbc.Driver").newInstance(); 
            con = DriverManager.getConnection(url,usuario,contraseña); 
            if ( con != null )
                System.out.println("Conectado a BBDD en:" + "\n" + url );
                stmt = con.createStatement();
                stmt.executeUpdate("INSERT INTO usuarios VALUES('" + 0 + "','"+cadena2+"','"+cod+"','"+mine+"','"+fort+"','"+tot_vent+"','"+com_cod+"','"+com_mine+"','"+com_fort+"','"+com_tot+"')");
                System.out.println("Usuario registrado.");}
        
        catch (InstantiationException ex) {
           Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);}
        catch (IllegalAccessException ex) {
           Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);}
        catch (ClassNotFoundException ex) {
           Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);}
        catch (SQLException ex) {
           Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);}
        
        finally {
            if (con != null) {
                try {
                    con.close();
                    stmt.close();
                } catch ( Exception e ) { 
                         System.out.println( e.getMessage());
                }
            }
        }
            javax.swing.JOptionPane.showMessageDialog(this,"Registro exitoso! \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        
        this.txt_nomb.setText("");
        this.txt_cod.setText("");
        this.txt_mine.setText("");
        this.txt_fort.setText("");
    }//GEN-LAST:event_btn_saveActionPerformed

    private void txt_nombKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if((c<'a' || c>'z') && (c<'A' || c>'Z') && (c<' ' || c>' ')) evt.consume();
    }//GEN-LAST:event_txt_nombKeyTyped

    private void txt_codKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_txt_codKeyTyped

    private void txt_mineKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mineKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_txt_mineKeyTyped

    private void txt_fortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fortKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_txt_fortKeyTyped

    private void btn_terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_terminarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        consultaVentas cv = new consultaVentas();
        cv.setLocationRelativeTo(null);
        cv.setVisible(true);
    }//GEN-LAST:event_btn_terminarActionPerformed

    private void btn_edtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_edtActionPerformed
        // TODO add your handling code here:
        String cap="";
        ResultSet rs = null; 
        var = javax.swing.JOptionPane.showInputDialog(this,"Nombre del usuario","Consulta usuario",javax.swing.JOptionPane.QUESTION_MESSAGE);
        String sql="SELECT* FROM  usuarios WHERE nombre = '"+var+"'";
        if(var == null)  
        javax.swing.JOptionPane.showMessageDialog(this,"La accion fue cancelada","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        else {   
        if (var.equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this,"Favor de ingresar el nombre de usuario\nque desea consultar","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        else {
        try {
            
            String url = "jdbc:mysql://localhost:3306/tarea2?characterEncoding=utf8";
            String usuario = "root";
            String contraseña = "admin";
            
             Class.forName("com.mysql.jdbc.Driver").newInstance(); 
             con = DriverManager.getConnection(url,usuario,contraseña); 
             if ( con != null ) 
                    System.out.println("Se ha establecido una conexión a la base de datos " +  
                                       "\n " + url ); 
  
                  stmt = con.createStatement(); 
                  rs = (ResultSet) stmt.executeQuery(sql);
                        
          while(rs.next()) {      
              consulta();           
         }   // fin del bucle While
         
        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException | SQLException ex) {
           Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
       }
        
        finally {
            if (con != null) {
                try {
                    con.close();
                    stmt.close();
                } catch ( Exception e ) { 
                         System.out.println( e.getMessage());
                }
              }
            }
        }
      }  

    }//GEN-LAST:event_btn_edtActionPerformed

    private void btn_envActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_envActionPerformed
        // TODO add your handling code here:
        actualizar();
    }//GEN-LAST:event_btn_envActionPerformed

    private void txt_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_edt;
    private javax.swing.JButton btn_env;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_terminar;
    private javax.swing.JLabel img_cod;
    private javax.swing.JLabel img_fort;
    private javax.swing.JLabel img_mine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField txt_cod;
    private javax.swing.JTextField txt_fort;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_mine;
    private javax.swing.JTextField txt_nomb;
    // End of variables declaration//GEN-END:variables
}
